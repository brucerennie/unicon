# <p>
# <b>complex_ex</b> Example using Unicon's operator overloading and the
# Complex class (complex negation is not provided by the class)
# <i>Requires that Unicon be configured with the</i> <tt>--enable-ovld</tt>
# <i>flag set.</i>
# </p>

import math

procedure main()
   write("c1: ",(c1 := Complex(1.5,3)).toString())
   write("c2: ",(c2 := Complex(1.5,1.5)).toString())
   write("+: ",(c1+c2).toString())
   write("-: ",(c1-c2).toString())
   write("*: ",(c1*c2).toString())
   write("/: ",(c1/c2).toString())
   write("additive inverse: ",c1.addInverse().toString())
   write("multiplicative inverse: ",c1.multInverse().toString())
   write("conjugate of (4,-3i): ",Complex(4,-3).conjugate().toString())
end
